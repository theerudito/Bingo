@page "/"
@using QuestPDF.Fluent
@using QuestPDF.Helpers
@using QuestPDF.Infrastructure

@inject IJSRuntime JS


<div class="containerMain">

    <div class="containerControl">

        <input type="text" @bind="_title" placeholder="Titulo" />

        <input type="number" @bind="_numCard" placeholder="Cantidad" />

        <input type="number" @bind="_numInCard" placeholder="Numeros" />

        <button @onclick="GenerarteCard" style="background: greenyellow">GENERAR</button>

        <button @onclick="DownLoadPDF" style="background: orange">PDF</button>

    </div>

    <div class="containerBody">

        @foreach(var item in cards)
        {
           <div class="containerCard">

               <div class="containerCardHeader">

                    <h5>@item.City</h5>

                    <div>
                        <h3>@item.Bingo</h3>
                    </div>

               </div>
           
               <div class="containerCardBody">

               @foreach(var card in item.Data)
               {

                 <div>

                    <h3>@card</h3>

                 </div>
 
               }

               </div>

                <div class="containerCardFooter">

                    <p>@item.Developer</p>

                    <p>Telf: @item.Phone</p>

                </div>

   
           </div>
        }
       
    </div>

</div>

@code {

    private string _title = "BETWEEN BYTE SOFTWARE";

    private int _numCard = 1;

    private int _numInCard = 25;


    public List<Card> cards = new List<Card>();

    protected override Task OnInitializedAsync()
    {
        cards = Generate.GenerateNumbers(_numCard, _numInCard, _title);

        return base.OnInitializedAsync();
    }

    private void GenerarteCard()
    {
        cards = Generate.GenerateNumbers(_numCard, _numInCard, _title);
    }

    private async void DownLoadPDF()
    {
        await JS.InvokeAsync<object>("downloadFilePdf", "bingo_cards.pdf", ManagerPDF.GenerartePDF(cards));
    }
}


